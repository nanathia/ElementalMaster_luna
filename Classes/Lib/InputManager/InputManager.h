//
//  InputManager.h
//  Stg14
//
//  Created by 永瀬鈴久 on 2014/04/09.
//
//	入力管理モジュール・ヘッダ
//
//	2014/04/09		永瀬鈴久
//		VERSION:	1.0
//
//		このクラスはそのままコピペか追加で行う。
//

#ifndef __Stg14__InputManager__
#define __Stg14__InputManager__

#include "cocos2d.h"

#include <string>
#include <vector>

//=============================================================================
//	KEY_FLAG
//		キーイベントをフラグで操作する為の構造体
//	-----------------------------------------------------------------------
//	現状入力で使用出来るキー
//
//	エスケープキー
//	スペースキー
//	上矢印キー
//	下矢印キー
//	左矢印キー
//	右矢印キー
//	Z キー
//	X キー
//	C キー
//
//	上記以外のキーを使用したい場合は自己管理で実装する事
//=============================================================================
typedef struct _tagKEY_FLAG {
	
public:
	
	// フラグ定数列挙 ---------------------------------------------------------------
	static const unsigned int NONE		= 0	;			// 無し
	
	static const unsigned int ESCAPE	= 1 << 0 ;		// エスケープキー
	static const unsigned int SPACE		= 1 << 1 ;		// スペースキー
	
	static const unsigned int UP		= 1 << 2 ;		// 上矢印キー
	static const unsigned int DOWN		= 1 << 3 ;		// 下矢印キー
	static const unsigned int LEFT		= 1 << 4 ;		// 左矢印キー
	static const unsigned int RIGHT		= 1 << 5 ;		// 右矢印キー
	
	static const unsigned int Z_KEY		= 1 << 6 ;		// Z キー
	static const unsigned int X_KEY		= 1 << 7 ;		// X キー
	static const unsigned int C_KEY		= 1 << 8 ;		// C キー
	static const unsigned int A_KEY		= 1 << 9 ;		// A キー
	
private:
	
	// フラグ
	unsigned int m_flag ;
	
public:
	
	//=============================================================================
	//	clear
	//		フラグのクリア
	//	-----------------------------------------------------------------------
	//	INPUT:		---
	//	OUTPUT:		void
	//=============================================================================
	void clear()
	{
		this->m_flag = 0 ;
	}
	
	//=============================================================================
	//	up
	//		フラグを上げる
	//	-----------------------------------------------------------------------
	//	INPUT:		unsigned int	上げるフラグ
	//	OUTPUT:		void
	//=============================================================================
	void up( unsigned int flag )
	{
		this->m_flag |= flag ;
	}
	
	//=============================================================================
	//	down
	//		フラグを下げる
	//	-----------------------------------------------------------------------
	//	INPUT:	unsigned int	下げるフラグ
	//	OUTPUT:	void
	//=============================================================================
	void down( unsigned int flag )
	{
		this->m_flag &= ~flag ;
	}

	//=============================================================================
	//	check
	//		フラグが上がっているかどうかチェックする
	//	-----------------------------------------------------------------------
	//	INPUT:		unsigned int	チェックするフラグ
	//	OUTPUT:		bool
	//					true  = 立っている
	//					false = 立っていない
	//=============================================================================
	bool check( unsigned int flag )
	{
		if ( this->m_flag & flag )
		{
			return true ;
		}
		return false ;
	}
	
} KEY_FLAG ;













//=============================================================================
//	InputManager
//		入力を管理するクラス
//=============================================================================
class InputManager
{	
private:
	
	// シングルトン用共有インスタンス
	static InputManager* m_sharedInputManager ;
	
	// コンストラクタ
	InputManager() ;
	
	// デストラクタ
	~InputManager() ;
	
	// キーフラグ
	KEY_FLAG	m_keyFlag ;
	
public:

	//=============================================================================
	//	getInstance
	//		共有インスタンスの取得
	//	-----------------------------------------------------------------------
	//	INPUT:	---
	//	OUTPUT:	void
	//=============================================================================
	static InputManager* getInstance() ;
	
	//=============================================================================
	//	onKeyPressed
	//		キーボードを押した際のイベント
	//	-----------------------------------------------------------------------
	//	INPUT:		cocos2d::EventKeyboard::KeyCode		キーコード
	//	OUTPUT:		void
	//=============================================================================
	void onKeyPressed( cocos2d::EventKeyboard::KeyCode keyCode ) ;
	
	//=============================================================================
	//	onKeyReleased
	//		キーボードを話した際のイベント
	//	-----------------------------------------------------------------------
	//	INPUT:		cocos2d::EventKeyboard::KeyCode		キーコード
	//	OUTPUT:		void
	//=============================================================================
	void onKeyReleased( cocos2d::EventKeyboard::KeyCode keyCode ) ;
	
	//=============================================================================
	//	changeToKeyFlagFromKeyCode
	//		キーコードからキーフラグへ変換
	//	-----------------------------------------------------------------------
	//	INPUT:		cocos2d::EventKeyboard::KeyCode		キーコード
	//	OUTPUT:		const unsigned int					キーフラグ
	//	TIPS:		最適化用、まだ使用はしていない
	//	-----------------------------------------------------------------------
	//	VERSION:	2.0
	//=============================================================================
	unsigned int changeToKeyFlagFromKeyCode( cocos2d::EventKeyboard::KeyCode keyCode ) ;
	
public:
	
	//=============================================================================
	//	isKeyPressed
	//		指定したキーが押されているかどうかを調べる
	//	-----------------------------------------------------------------------
	//	INPUT:		unsigned int flag_			キーフラグ
	//	OUTPUT:		bool
	//						true  = 押されている
	//						false = 押されていない
	//=============================================================================
	bool isKeyPressed( unsigned int flag_ ) ;
};

#define IsKeyPressed(f_)	(InputManager::getInstance()->isKeyPressed(f_))

#endif /* defined(__Stg14__InputManager__) */
